"""
Function to return the Gauss Hermite value of order n
for a given distribution of weights w.

@author: Steven Gough-Kelly
"""

# Import Libraries
import numpy as np 
import matplotlib.pyplot as plt
import scipy
from scipy import stats

def Gauss_Hermite(w, n):
    """
    Return the Gauss Hermite function of order n, weights w
    Gerhard MNRAS (1993) 265, 213-230
    Equations 3.1 - 3.7
    """
    w = np.array(w)
    p = scipy.special.hermite(n, monic=False) #hermite poly1d obj
    norm = np.sqrt((2**(n+1))*np.pi*np.math.factorial(n)) # N_n Eqn 3.1

    return (p(w)/norm) * np.exp( -0.5 * w * w )

def GaussHermiteMoment(v, n):
    v = v[np.isfinite(v)] # remove nans&inf
    if len(v) <= 1: # Added SL speed+error catch
        return np.nan

    v_dash = (v - np.mean(v))/np.std(v) # center on 0, norm width to 1sig
    hn = np.sum(Gauss_Hermite(v_dash, n))
    return np.sqrt(4*np.pi) * hn / len(v)

if __name__ == "__main__":

    """
    Example of using these functions with binned_statistic. These values are not
    representative of true distributions of positions and velocity just to debug.
    """

    x = np.random.normal(0,100,100)
    y = np.random.normal(0,100,100)
    vz = np.random.normal(0,100,100)
    bins = 10

    #print(x)
    #print(y)
    #print(vz)

    '''
    vz = vz.reshape(100, 100)
    x1, y1 = np.meshgrid(x, y)

    plt.contour(x, y, vz, 20, cmap='RdGy')
    plt.colorbar()
    # Save
    plt.savefig('gh-test-1.png')
    '''

    stat,edges,binnum = stats.binned_statistic(x, vz,
                                   statistic=lambda bin_values: \
                                   GaussHermiteMoment(bin_values, 4),
                                   bins=bins)

    print()
    print('stat = ' + str(stat))
    print('edges = ' + str(edges))
    print('binnum = ' + str(binnum))

    stat2d,xedges,yedges,binnum2d = stats.binned_statistic_2d(x, y ,vz,
                                  statistic=lambda bin_values: \
                                  GaussHermiteMoment(bin_values, 4),
                                  bins=bins)
    
    print()
    print('sta2d = ' + str(stat2d))
    print('xedges = ' + str(xedges))
    print('yedges = ' + str(yedges))
    print('binnum2d = ' + str(binnum2d))

    #print(stat,edges,binnum)
    #print()
    #print(stat2d,xedges,yedges,binnum)